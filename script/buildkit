#!/bin/bash

set -eu

top_dir="$(git rev-parse --show-toplevel)"
declare -r top_dir

declare do_push=0 push_cache=0 no_local=0 start_only=0
while (($# > 0)); do
  case "$1" in
  push)
    do_push=1
    ;;
  push-cache | push_cache | pushcache | --push-cache | -p)
    push_cache=1
    ;;
  no-local | --no-local | -L)
    no_local=1
    ;;
  ci | --ci)
    no_local=1
    push_cache=1
    ;;
  start-only | --start-only | -s)
    start_only=1
    ;;
  *)
    echo "Unknown argument: $1" 1>&2
    exit 2
    ;;
  esac
  shift
done
declare -r do_push push_cache no_local start_only

if ((do_push)); then
  tag="${IMAGE_NAME:-docwhat:local}"
else
  tag=docwhat:local
fi
declare -r tag

node_version=$(cat "${top_dir}/.node-version")
declare -r node_version

git_url="$(git ls-remote --get-url)"
git_branch="$(git rev-parse --abbrev-ref HEAD)"
git_sha=${GIT_SHA1:-$(git rev-parse HEAD)}
git_commit=${GIT_COMMIT:-$(git log -1 --date=short --format='%h %ad %s')}
git_version=${GIT_VERSION:-$(git describe --always --tags)}
declare -r git_url git_branch git_sha git_commit git_version

# Initialize a builder.
docker buildx create \
  --use \
  --name=docwhat \
  --driver=docker-container \
  --node=docwhat

if ((start_only)); then
  exit 0
fi

## Build args
declare -a build_args=(
  # What to build
  "${top_dir}"
  "--tag=${tag}"
  # Various options
  "--progress=plain"
  "--build-arg=NODE_VERSION=${node_version}"
  "--build-arg=SITE_COMMIT=${git_commit}"
  "--build-arg=SITE_VERSION=${git_sha}"
  "--build-arg=GIT_URL=${git_url}"
  "--build-arg=GIT_BRANCH=${git_branch}"
  "--build-arg=GIT_VERSION=${git_version}"
  # Target
  "--target=final"
  # Cache
  "--cache-from=type=registry,ref=docker.io/docwhat/docwhat:cache"
)

if ! ((push_cache)); then
  {
    echo
    echo "I will publish the cache..."
  } 1>&2

  build_args+=(
    "--cache-to=type=registry,mode=max,ref=docker.io/docwhat/docwhat:cache"
  )
fi

## Run
if ((do_push)); then
  {
    echo
    echo "Pushing to ${tag}..."
  } 1>&2
  build_args+=(
    "--push"
  )
elif ! ((no_local)); then
  build_args+=(
    "--load"
  )
fi

docker buildx build "${build_args[@]}"

# EOF
