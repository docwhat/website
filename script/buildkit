#!/bin/bash

set -eu

top_dir="$(git rev-parse --show-toplevel)"
declare -r top_dir

declare do_push=0 ignore_cache=0
while (($# > 0)); do
  case "$1" in
  push)
    do_push=1
    ;;
  ignore-cache | ignore_cache | ignorecache | --ignore-cache | -i)
    ignore_cache=1
    ;;
  *)
    echo "Unknown argument: $1" 1>&2
    exit 2
    ;;
  esac
  shift
done
declare -r do_push ignore_cache

if ((do_push)); then
  tag="${IMAGE_NAME:-docwhat:local}"
else
  tag=docwhat:local
fi
declare -r tag

node_version=$(cat "${top_dir}/.node-version")
declare -r node_version

build_date="$(env TZ='America/New_York' date '+%Y-%m-%dT%H:%M:%SZ')"
declare -r build_date

git_url="$(git ls-remote --get-url)"
git_branch="$(git rev-parse --abbrev-ref HEAD)"
git_sha=${GIT_SHA1:-$(git rev-parse HEAD)}
git_commit=${GIT_COMMIT:-$(git log -1 --date=short --format='%h %ad %s')}
git_version=${GIT_VERSION:-$(git describe --always --tags)}
declare -r git_url git_branch git_sha git_commit git_version

if buildctl du >/dev/null 2>&1; then
  echo "Using existing buildkit daemon..."
else
  export BUILDKIT_HOST=tcp://0.0.0.0:1234
  if buildctl du >/dev/null 2>&1; then
    echo "Using existing buildkit daemon on port 1234..."
  else
    docker container rm --force buildkit >/dev/null 2>&1 || :
    docker run -d \
      "--privileged" \
      "--publish=1234:1234" \
      "--name=buildkit" \
      "moby/buildkit:latest" \
      --addr tcp://0.0.0.0:1234
  fi
fi

declare -ra buildctl_args=(
  # How to build
  "--frontend=dockerfile.v0"
  # What to build
  "--local=context=${top_dir}"
  "--local=dockerfile=${top_dir}"
  # Various options
  "--opt=build-arg:NODE_VERSION=${node_version}"
  "--opt=build-arg:SITE_COMMIT=${git_commit}"
  "--opt=build-arg:SITE_VERSION=${git_sha}"
  "--opt=build-arg:GIT_URL=${git_url}"
  "--opt=build-arg:GIT_BRANCH=${git_branch}"
  "--opt=build-arg:GIT_VERSION=${git_version}"
  # Target
  "--opt=target=final"
  # Cache
  "--import-cache=type=registry,ref=docker.io/docwhat/docwhat:cache"
)

if ! ((ignore_cache)); then
  buildctl_args=(
    "${buildctl_args[@]}"
    "--export-cache=type=registry,mode=max,ref=docker.io/docwhat/docwhat:cache"
  )
fi

if ((do_push)); then
  {
    echo
    echo "Pushing to ${tag}..."
  } 1>&2
  buildctl build "${buildctl_args[@]}" "--output=type=image,push=true,name=${tag}"
else
  buildctl build "${buildctl_args[@]}" "--output=type=docker,name=${tag}" | docker load
fi

# EOF
