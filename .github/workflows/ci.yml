name: ci

on:
  pull_request:
    branches:
      - master
      - main
  push:
    branches:
      - master
      - main

jobs:
  build:
    name: Build Container
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        id: prep
        run: |
          set -eu
          declare -r docker_image='docker.pkg.github.com/${{ github.repository }}/blog'
          tags="${docker_image}:sha-${GITHUB_SHA::8}"
          declare -r tags="$tags,${docker_image}:latest"
          declare -r event_name='${{ github.event_name }}'
          if [ "$event_name" == pull_request ]; then
            push=false
          else
            push=true
          fi
          declare -r push
          echo "::set-output name=tags::${tags}"
          echo "::set-output name=push::${push}"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: ${{ steps.prep.outputs.push }}
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
